# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- ci-sast

pool:
    vmImage: ubuntu-latest

stages:
- stage: CI

  jobs:
  - job: CodeSecurity
    steps:
      - task: CmdLine@2
        displayName: "CheckPoint Spectral Scan"
        inputs:
          script: |
            echo "Install Spectral"
            curl -L 'https://spectral-eu.checkpoint.com/latest/x/sh?dsn=$(SPECTRAL_DSN)' | sh
            echo "Spectral Scan"
            $HOME/.spectral/spectral scan --ok --dsn $(SPECTRAL_DSN) --engines secrets,iac,oss --include-tags base,audit3,iac
  - job: SCA
    steps:
      - task: NexusIqPipelineTask@1 
        inputs:
          nexusIqService: 'NEXUS IQ'
          organizationId: '8f0895dbdb664a7fa14e7c45120cf334'
          applicationId: 'iwa-java-ado'
          stage: 'Build'
          scanTargets: 'pom.xml'

  - job: SAST
    steps:
      - task: FortifyScanCentralSAST@7
        displayName: "Fortify ScanCentral SAST Scan"
        inputs:
          scanCentralCtrlUrl: 'https://ssc.nsth.net/scancentral-ctrl'
          scanCentralClientToken: '$(ScanCentral.ClientToken)'
          sscUrl: 'https://ssc.nsth.net/ssc'
          sscCiToken: '$(ScanCentral.SscCiToken)'
          uploadToSSC: true
          applicationName: 'IWA-Java'
          applicationVersion: 'v1.0'
          buildTool: 'mvn'
          email: 'pattaranan.j@nsth.demo'

  - job: Build
    steps:
      - task: DownloadSecureFile@1
        name: mvnSettingsFile
        displayName: 'Download Maven Settings File'
        inputs:
          secureFile: 'settings.xml'
      - task: Maven@4
        displayName: 'Maven Build'
        inputs:
          mavenPomFile: 'pom.xml'
          options: '-Pjar -s $(mvnSettingsFile.secureFilePath)'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: Bash@3
        displayName: "Build JAR to Docker Image"
        inputs:
          targetType: 'inline'
          script: |
            docker image build -t iwa -f Dockerfile .
            docker image tag iwa docker-group.nexus.nsth.net/iwa:$(Build.BuildNumber)
            docke image ls
          
            docker login -u ado-svc -p admin123 docker-group.nexus.nsth.net
            docker image push docker-group.nexus.nsth.net/iwa:$(Build.BuildNumber)
            docker logout

  - job: ContainerSecurity
    steps:
      - task: Docker@2
        displayName: 'Login to Aqua Registry'
        inputs:
          containerRegistry: 'aqua.nexus.nsth.net'
          command: 'login'
      - task: Bash@3
        displayName: 'Docker Pull image'
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
            ls -l
            docker image pull docker-group.nexus.nsth.net/iwa:$(Build.BuildNumber)
            docker ps
      - task: aquasecScanner@4
        inputs:
          image: 'docker-group.nexus.nsth.net/iwa:$(Build.BuildNumber)'
          scanType: 'local'
          containerRuntime: 'docker'
          register: false
          hideBase: false
          showNegligible: false
          scanner: 'aqua.nexus.nsth.net/scanner:6.5'
          connection: 'AQUA'